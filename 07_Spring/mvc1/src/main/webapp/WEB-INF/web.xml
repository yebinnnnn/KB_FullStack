<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
         version="4.0">
    <listener>
        <!--step 1.톰캣이 켜지면
            step 2. WebContext별로 ServletContext객체생성된다
            step 3.  o.s.w.c.ContextLoaderListener의 contextInitialized()가 자동 호출되어
                                      스프링컨테이너인 WebApplicationContext객체를 생성한다
                    ServletContextListener인터페이스는 ServletContext객체 생성소멸을 감시하는 감시자이다
                    o.s.w.c.ContextLoaderListener는 ServletContextListener를 구현한 스프링 클래스이다

                    생성된 ServletContext객체의 파라메터는 <context-param>으로 설정한다
                    스프링컨테이너를 구동할 때 필요한 설정파일은
                       <context-param>의 param-name중 contextConfigLocation값("/WEB-INF/root-context.xml"파일)을 사용한다
                    비지니스로직용 스프링빈(DAO, Service)들을 생성할때 사용한다
            -->
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>/WEB-INF/root-context.xml</param-value>
    </context-param>

    <!--step4. 프론트콘트롤러인 DispatcherServlet객체가 생성된다
        step5. 스프링컨테이너인 WebApplicationContext가 없다면 객체생성한다
        step6. 스프링컨테이너를 구동할 때 필요한 설정파일은 <param-name>의 param-name중 contextConfigLocation값("/WEB-INF/mvc1-context.xml"파일)을 사용한다
               웹요청처리용 스프링빈(Controller)들을 생성할때 사용한다
    -->
    <servlet>
        <servlet-name>mvc1</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>/WEB-INF/mvc1-context.xml</param-value>
        </init-param>
    </servlet>
    <servlet-mapping>
        <servlet-name>mvc1</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>
</web-app>